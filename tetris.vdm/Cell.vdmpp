class Cell

	instance variables
		private totalRows			:nat 					:= 20;
		private totalColumns		:nat 					:= 10;
		
		private emptyCell			:nat					:=0;
		private blockedCell			:nat					:=1;
				
		private pieceI				:nat					:=111;
		private pieceO				:nat					:=222;
		private pieceT				:nat					:=333;
		private pieceJ				:nat					:=444;
		private pieceL				:nat					:=555;
		private pieceS				:nat					:=666;
		private pieceZ				:nat					:=777;
			
		private matrix 				:Board`Matrix	:= {|->};
		private tempMatrix			:Board`Matrix	:= {|->};
		private pieceOperation		:nat					:= 0;
						  
	operations	
		------------------------------------------------------------ add and remove piece
		public setPiece :	Board`String  * 
							Board`Position * Board`Position * 
							Board`Position * Board`Position * 
							Board`Matrix
							==> (Board`Matrix)
		setPiece(option, coord1, coord2, coord3, coord4, get_matrix) ==(
			
			matrix := get_matrix;
					
			(if(option = "set") then
				pieceOperation := pieceI
			elseif (option = "remove") then
				pieceOperation := emptyCell
			);
			
			matrix := matrix ++ {coord1 |-> pieceOperation};
			matrix := matrix ++ {coord2 |-> pieceOperation};
			matrix := matrix ++ {coord3 |-> pieceOperation};
			matrix := matrix ++ {coord4 |-> pieceOperation};
			
			return matrix;
		);
				
		------------------------------------------------------------ automaticallyMovePiece
		public automaticallyMovePiece : Board`Matrix * 
										Board`Matrix ==> (Board`Matrix)
		automaticallyMovePiece(get_tempMatrix, get_matrix) ==(
 		
			matrix 		:= get_matrix;
			tempMatrix 	:= get_tempMatrix;
 		
			-- move piece
			for i=0 to totalRows do(
	  			for j=0 to totalColumns do (
  				  	 				  		  				  	
					if (matrix([i,j]) = pieceI) then(
						tempMatrix([i+1,j]) := pieceI;
					);		
  				);  			
	  		);
	  		matrix:= tempMatrix;	
	  		return tempMatrix;
		);
		
		------------------------------------------------------------ manualMovePiece
		public manuallyMovePiece : 	Board`String * nat * 
									Board`Matrix * Board`Matrix
									==> (Board`Matrix)
		manuallyMovePiece(option, numberOfClicks, get_tempMatrix, get_matrix) ==(
 		
			matrix 		:= get_matrix;
			tempMatrix 	:= get_tempMatrix;
			
			if(option = "moveRight") then(
				for i=0 to totalRows do(
		  			for j=0 to totalColumns do (
	  				  	 				  		  				  	
						if (matrix([i,j]) = pieceI) then(
							tempMatrix([i,j+numberOfClicks]) := pieceI;
						);		
	  				);  			
		  		);
		  	)
			elseif (option = "moveLeft") then(
				for i=0 to totalRows do(
		  			for j=0 to totalColumns do (
	  				  	 				  		  				  	
						if (matrix([i,j]) = pieceI) then(
							tempMatrix([i,j-numberOfClicks]) := pieceI;
						);		
	  				);  			
		  		);
			);
	  		matrix:= tempMatrix;	
	  		return tempMatrix;
		);
end Cell
